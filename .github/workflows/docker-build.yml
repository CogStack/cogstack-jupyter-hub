name: docker-jupyter-hub-all

on:
  push:
    branches: ['**']
    tags: ['v*.*.*']
  pull_request:
    branches: ['**']
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: docker-jupyter-all-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: cogstacksystems/jupyter-hub

    strategy:
      fail-fast: false
      matrix:
        include:
          # 1) Jupyter Hub (multi-arch)
          - id: hub
            repo: cogstacksystems/jupyter-hub
            dockerfile: Dockerfile_hub
            context: .
            platforms: linux/amd64,linux/arm64
            gpu_build: "false"

          # 2) Singleuser CPU (multi-arch)
          - id: singleuser-cpu
            repo: cogstacksystems/jupyter-singleuser
            dockerfile: Dockerfile_singleuser
            context: .
            platforms: linux/amd64,linux/arm64
            gpu_build: "false"

          # 3) Singleuser GPU (amd64 only)
          - id: singleuser-gpu
            repo: cogstacksystems/jupyter-singleuser-gpu
            dockerfile: Dockerfile_singleuser
            context: .
            platforms: linux/amd64
            gpu_build: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.repo }}
          tags: |
            # Strip "v" from tags like v1.2.3 -> 1.2.3 / 1.2
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            # latest only on version tags
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            # main branch -> edge
            type=raw,value=edge,enable=${{ github.ref == 'refs/heads/main' }}
            # other branches -> branch name
            type=ref,event=branch,enable=${{ github.event_name != 'pull_request' }}
            # always add a short sha
            type=sha,format=short

      - name: Log in to Docker Hub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          build-args: |
            CPU_ARCHITECTURE=auto
            GPU_BUILD=${{ matrix.gpu_build }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.title=${{ matrix.id }}
          cache-from: type=gha,scope=${{ matrix.id }}
          cache-to: type=gha,mode=max,scope=${{ matrix.id }}
          push: ${{ github.event_name != 'pull_request' }}
