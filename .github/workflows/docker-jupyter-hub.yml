name: docker-jupyter-hub-hybrid-architecture

on:

  push:
    branches: ['**']
    tags: ['v*.*.*']
  pull_request:
    branches: ['**']
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            runner: ubuntu-22.04
          - platform: arm64
            runner: ubuntu-22.04-arm
  
    env:
      working-directory: ./

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: checkout repo
        uses: actions/checkout@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cogstacksystems/jupyter-hub:latest
          
      - name: Get and set release version env var
        id: release_version
        run: |
             echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
             echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: set docker release tag name
        id: set_release_version_latest
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "RELEASE_VERSION=latest" >> $GITHUB_ENV
      
      - name: set CPU architecture
        id: set_cpu_architecture
        run: echo "CPU_ARCHITECTURE=${{ matrix.platform }}" >> $GITHUB_ENV

      - name: Build and push Docker Jupyter Hub image
        run: |
          docker build --platform linux/${{ matrix.platform }} -t cogstacksystems/jupyter-hub:$RELEASE_VERSION-${{ matrix.platform }} -f Dockerfile_hub --build-arg CPU_ARCHITECTURE=${{ matrix.platform }} .
          docker push cogstacksystems/jupyter-hub:$RELEASE_VERSION-${{ matrix.platform }}
          DIGEST=$(docker images --digests --format '{{.Digest}}' cogstacksystems/jupyter-hub | head -n 1)
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
