name: docker-jupyter-hub-hybrid-architecture

on:
  push:
    branches: ['**']
    tags: ['v*.*.*']
  pull_request:
    branches: ['**']
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      IMAGE_NAME: cogstacksystems/jupyter-hub

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Generate tags/labels based on event type (no 'latest' on branches/PRs)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # tags (vX.Y.Z) → strip "v" automatically
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            # main branch → edge
            type=raw,value=edge,enable=${{ github.ref == 'refs/heads/main' }}

            # other branches → branch name
            type=ref,event=branch,enable=${{ github.event_name != 'pull_request' }}

            # always add a short sha tag
            type=sha,format=short

      - name: Log in to Docker Hub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build (and push if not PR) multi-arch
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile_hub
          platforms: linux/amd64,linux/arm64
          build-args: |
            CPU_ARCHITECTURE=auto
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name != 'pull_request' }}
